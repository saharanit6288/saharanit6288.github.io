{"version":3,"sources":["Firebase.js","components/Global.js","components/boards/Edit.js","components/boards/Create.js","components/boards/List.js","components/boards/Info.js","components/Dashboard.js","components/auth/Register.js","components/auth/Login.js","components/auth/Logout.js","components/auth/ForgotPassword.js","components/auth/ChangePassword.js","ProtectedRoute.js","Router.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","components_Global","Global","Object","classCallCheck","this","boardCollection","firestore","collection","authentication","auth","Edit","props","_this","possibleConstructorReturn","getPrototypeOf","call","onChange","e","state","target","name","value","setState","onSubmit","preventDefault","_this$state","title","description","author","doc","id","set","then","docRef","history","push","catch","error","console","match","params","boardId","_this2","get","exists","board","data","log","info","fetchBoard","_this$state2","react_default","a","createElement","className","for","type","placeholder","cols","rows","Link","to","Component","Create","ref","add","List","onCollectionUpdate","querySnapshot","boards","forEach","_doc$data","key","unsubscribe","onSnapshot","map","i","concat","withRouter","Info","_this3","delete","onClick","deleteBoard","bind","Dashboard","src","width","height","alt","Register","email","username","password","firebaseauth","createUserWithEmailAndPassword","user","confirmpassword","isInvalid","disabled","message","Login","signInWithEmailAndPassword","Logout","onLogout","signOut","NavLink","ForgotPassword","sendPasswordResetEmail","ChangePassword","currentUser","updatePassword","ProtectedRoute","_ref","component","authenticated","rest","objectWithoutProperties","Route","assign","render","Redirect","pathname","from","location","NavigationAuth","auth_Logout","NavigationNonAuth","Router","class","Router_NavigationAuth","Router_NavigationNonAuth","Switch","exact","path","src_ProtectedRoute","App","onAuthStateChanged","src_Router","Boolean","window","hostname","ReactDOM","BrowserRouter","basename","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.81a60c8b.chunk.js","sourcesContent":["import * as firebase from 'firebase';\r\nimport firestore from 'firebase/firestore'\r\n\r\nconst settings = {};\r\n\r\nconst config = {\r\n    apiKey: \"xxx\",\r\n    authDomain: \"xxx\",\r\n    databaseURL: \"xxx\",\r\n    projectId: \"xxx\",\r\n    storageBucket: \"xxx\",\r\n    messagingSenderId: \"xxx\"\r\n  };\r\nfirebase.initializeApp(config);\r\n\r\nfirebase.firestore().settings(settings);\r\n\r\nexport default firebase;\r\n","import firebase from '../Firebase';\r\n\r\nclass Global {\r\n    constructor() {\r\n\r\n      this.boardCollection = firebase.firestore().collection('boards');\r\n      this.authentication = firebase.auth();\r\n    }\r\n  }\r\n  \r\n  export default (new Global());","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Global from '../Global';\r\n\r\nclass Edit extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          title: '',\r\n          description: '',\r\n          author: '',\r\n          id: props.match.params.id\r\n        };\r\n      }\r\n\r\n    fetchBoard(boardId) {\r\n        const ref = Global.boardCollection.doc(boardId);\r\n        ref.get().then((doc) => {\r\n          if (doc.exists) {\r\n            const board = doc.data();\r\n            this.setState({\r\n                title: board.title,\r\n                description: board.description,\r\n                author: board.author\r\n            });\r\n          } else {\r\n            console.log(\"No such document!\");\r\n            this.setState({ info: {} });\r\n          }\r\n        });\r\n    }\r\n\r\n    onChange = (e) => {\r\n        const state = this.state\r\n        state[e.target.name] = e.target.value;\r\n        this.setState(state);\r\n      }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n    \r\n        const { title, description, author } = this.state;\r\n        const updateRef = Global.boardCollection.doc(this.state.id);\r\n        updateRef.set({\r\n            title,\r\n            description,\r\n            author\r\n        }).then((docRef) => {\r\n          this.setState({\r\n            title: '',\r\n            description: '',\r\n            author: '',\r\n            id: ''\r\n          });\r\n          this.props.history.push(\"/boards\");\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error adding document: \", error);\r\n        });\r\n      }\r\n\r\n    componentDidMount() {\r\n        this.fetchBoard(this.state.id);\r\n    }\r\n\r\n    render() {\r\n      const { title, description, author } = this.state;\r\n      return (            \r\n        <div className=\"container\">\r\n            <div className=\"panel panel-default\">\r\n            <div className=\"panel-heading\">\r\n                <h3 className=\"panel-title\">\r\n                    Edit Board\r\n                </h3>\r\n            </div>\r\n            <div className=\"panel-body\">\r\n                \r\n                <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label for=\"title\">Title:</label>\r\n                    <input type=\"text\" className=\"form-control col-md-4\" name=\"title\" value={title} onChange={this.onChange} placeholder=\"Title\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label for=\"description\">Description:</label>\r\n                    <textarea className=\"form-control col-md-4\" name=\"description\" value={description} onChange={this.onChange} placeholder=\"Description\" cols=\"80\" rows=\"3\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label for=\"author\">Author:</label>\r\n                    <input type=\"text\" className=\"form-control col-md-4\" name=\"author\" value={author} onChange={this.onChange} placeholder=\"Author\" />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-success\">Submit</button>\r\n                </form>\r\n            </div>\r\n            <div className=\"panel-footer\">\r\n                <h4><Link to=\"/boards\">Board list</Link></h4>\r\n            </div>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Edit;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Global from '../Global';\r\n\r\nclass Create extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.ref = Global.boardCollection;\r\n        this.state = {\r\n          title: '',\r\n          description: '',\r\n          author: ''\r\n        };\r\n      }\r\n\r\n    onChange = (e) => {\r\n        const state = this.state\r\n        state[e.target.name] = e.target.value;\r\n        this.setState(state);\r\n      }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        const { title, description, author } = this.state;\r\n    \r\n        this.ref.add({\r\n          title,\r\n          description,\r\n          author\r\n        }).then((docRef) => {\r\n          this.setState({\r\n            title: '',\r\n            description: '',\r\n            author: ''\r\n          });\r\n          this.props.history.push(\"/boards\");\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error adding document: \", error);\r\n        });\r\n      }\r\n\r\n    componentDidMount() {\r\n        \r\n    }\r\n\r\n    render() {\r\n      const { title, description, author } = this.state;\r\n      return (            \r\n        <div className=\"container\">\r\n            <div className=\"panel panel-default\">\r\n            <div className=\"panel-heading\">\r\n                <h3 className=\"panel-title\">\r\n                    Add Board\r\n                </h3>\r\n            </div>\r\n            <div className=\"panel-body\">\r\n                \r\n                <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label for=\"title\">Title:</label>\r\n                    <input type=\"text\" className=\"form-control col-md-4\" name=\"title\" value={title} onChange={this.onChange} placeholder=\"Title\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label for=\"description\">Description:</label>\r\n                    <textarea className=\"form-control col-md-4\" name=\"description\" value={description} onChange={this.onChange} placeholder=\"Description\" cols=\"80\" rows=\"3\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label for=\"author\">Author:</label>\r\n                    <input type=\"text\" className=\"form-control col-md-4\" name=\"author\" value={author} onChange={this.onChange} placeholder=\"Author\" />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-success\">Submit</button>\r\n                </form>\r\n            </div>\r\n            <div className=\"panel-footer\">\r\n                <h4><Link to=\"/boards\">Board list</Link></h4>\r\n            </div>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Create;","import React, { Component } from 'react';\r\nimport { withRouter,Link } from 'react-router-dom';\r\nimport Global from '../Global';\r\n\r\nclass List extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.ref = Global.boardCollection;\r\n        this.unsubscribe = null;\r\n        this.state = {\r\n          boards: []\r\n        };\r\n      }\r\n\r\n    onCollectionUpdate = (querySnapshot) => {\r\n        const boards = [];\r\n        querySnapshot.forEach((doc) => {\r\n            const { title, description, author } = doc.data();\r\n            boards.push({\r\n            key: doc.id,\r\n            doc, // DocumentSnapshot\r\n            title,\r\n            description,\r\n            author,\r\n            });\r\n        });\r\n        this.setState({ boards });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.unsubscribe = this.ref.onSnapshot(this.onCollectionUpdate);\r\n    }\r\n\r\n    render() {\r\n      return (            \r\n        <div className=\"container\">\r\n            <div className=\"panel panel-default\">\r\n            <div className=\"panel-heading\">\r\n                <h3 className=\"panel-title\">\r\n                    Board List\r\n                </h3>\r\n            </div>\r\n            <div className=\"panel-body\">\r\n                <h4><Link to=\"/create\">Add Board</Link></h4>\r\n                <table className=\"table table-stripe\">\r\n                <thead>\r\n                    <tr>\r\n                        <td>Title</td>\r\n                        <td>Description</td>\r\n                        <td>Author</td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.state.boards.map((board,i) =>\r\n                    <tr key={i}>\r\n                        <td><Link to={`/info/${board.key}`}>{board.title}</Link></td>\r\n                        <td>{board.description}</td>\r\n                        <td>{board.author}</td>\r\n                    </tr>\r\n                    )}\r\n                </tbody>\r\n                </table>\r\n            </div>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(List);","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Global from '../Global';\r\n\r\nclass Info extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.ref = Global.boardCollection;\r\n        this.state = {\r\n            info: {},\r\n            boardId: props.match.params.id\r\n        };\r\n    }\r\n\r\n    fetchBoard(boardId) {\r\n        const ref = this.ref.doc(boardId);\r\n        ref.get().then((doc) => {\r\n          if (doc.exists) {\r\n            this.setState({\r\n              info: doc.data()\r\n            });\r\n          } else {\r\n            console.log(\"No such document!\");\r\n            this.setState({ info: {} });\r\n          }\r\n        });\r\n    }\r\n\r\n    deleteBoard(boardId){\r\n        this.ref.doc(boardId).delete().then(() => {\r\n          console.log(\"Document successfully deleted!\");\r\n          this.props.history.push(\"/boards\");\r\n        }).catch((error) => {\r\n          console.error(\"Error removing document: \", error);\r\n        });\r\n      }\r\n\r\n    componentDidMount() {\r\n        this.fetchBoard(this.state.boardId);\r\n    }\r\n\r\n    render() {\r\n      \r\n      return (            \r\n        <div className=\"container\">\r\n            <div className=\"panel panel-default\">\r\n            <div className=\"panel-heading\">\r\n                <h3 className=\"panel-title\">\r\n                    {this.state.info.title}\r\n                </h3>\r\n            </div>\r\n            <div className=\"panel-body\">\r\n                <dl>\r\n                <dt>Description:</dt>\r\n                <dd>{this.state.info.description}</dd>\r\n                <dt>Author:</dt>\r\n                <dd>{this.state.info.author}</dd>\r\n                </dl>\r\n                <Link to={`/edit/${this.state.boardId}`} className=\"btn btn-success\">Edit</Link>&nbsp;\r\n                <button onClick={this.deleteBoard.bind(this, this.state.boardId)} className=\"btn btn-danger\">Delete</button>\r\n            </div>\r\n            </div>\r\n            <div className=\"panel-footer\">\r\n                <h4><Link to=\"/boards\">Board list</Link></h4>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Info;\r\n","import React, { Component } from 'react';\r\n\r\nclass Dashboard extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n    }\r\n\r\n    render() {\r\n      \r\n      return (            \r\n        <div className=\"container\">\r\n            <img src=\"https://cdn-images-1.medium.com/max/2600/1*h-xRzZOCHk8jTlEa8M42GA.png\" \r\n                width=\"100%\"\r\n                height=\"350\" \r\n                alt=\"\" />\r\n            <br />\r\n            <p>\r\n                <h3>This is react firebase demo boards app.</h3>\r\n            </p>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, { Component } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport Global from '../Global';\r\n\r\nclass Register extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.firebaseauth = Global.authentication;\r\n        this.state = {\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            confirmpassword: '',\r\n            error: null,\r\n        };\r\n      }\r\n\r\n    onChange = (e) => {\r\n        const state = this.state\r\n        state[e.target.name] = e.target.value;\r\n        this.setState(state);\r\n      }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        const { username, email, password } = this.state;\r\n    \r\n        this.firebaseauth\r\n        .createUserWithEmailAndPassword(email, password)\r\n        .then((user) => {\r\n          this.props.history.push('/');\r\n        })\r\n        .catch((error) => {\r\n          this.setState({ error: error });\r\n        });\r\n      }\r\n\r\n    componentDidMount() {\r\n        \r\n    }\r\n\r\n    render() {\r\n        const {\r\n            username,\r\n            email,\r\n            password,\r\n            confirmpassword,\r\n            error,\r\n          } = this.state;\r\n\r\n        const isInvalid =\r\n            password !== confirmpassword ||\r\n            password === '' ||\r\n            email === '' ||\r\n            username === '';\r\n\r\n      return (            \r\n        <div className=\"container\">\r\n            <div className=\"panel panel-default\">\r\n            <div className=\"panel-heading\">\r\n                <h3 className=\"panel-title\">\r\n                    Register\r\n                </h3>\r\n            </div>\r\n            <div className=\"panel-body\">\r\n                \r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label for=\"title\">Full Name:</label>\r\n                        <input\r\n                            name=\"username\"\r\n                            value={username}\r\n                            onChange={this.onChange}\r\n                            type=\"text\"\r\n                            placeholder=\"Full Name\"\r\n                            className=\"form-control col-md-4\"\r\n                            />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label for=\"description\">Email:</label>\r\n                        <input\r\n                            name=\"email\"\r\n                            value={email}\r\n                            onChange={this.onChange}\r\n                            type=\"text\"\r\n                            placeholder=\"Email Address\"\r\n                            className=\"form-control col-md-4\"\r\n                            />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label for=\"author\">Password:</label>\r\n                        <input\r\n                            name=\"password\"\r\n                            value={password}\r\n                            onChange={this.onChange}\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            className=\"form-control col-md-4\"\r\n                            />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label for=\"author\">Confirm Password:</label>\r\n                        <input\r\n                            name=\"confirmpassword\"\r\n                            value={confirmpassword}\r\n                            onChange={this.onChange}\r\n                            type=\"password\"\r\n                            placeholder=\"Confirm Password\"\r\n                            className=\"form-control col-md-4\"\r\n                            />\r\n                    </div>\r\n                    <button type=\"submit\" disabled={isInvalid} className=\"btn btn-success\">Register</button>\r\n\r\n                    {error && <p>{error.message}</p>}\r\n                </form>\r\n            </div>\r\n            <div className=\"panel-footer\">\r\n                <h4>Already a member?&nbsp;<Link to=\"/login\">LogIn</Link></h4>\r\n                <h4>Forgot Password?&nbsp;<Link to=\"/forgotpassword\">Forgot Password</Link></h4>\r\n            </div>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Register);","import React, { Component } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport Global from '../Global';\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.firebaseauth = Global.authentication;\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            error: null,\r\n        };\r\n      }\r\n\r\n    onChange = (e) => {\r\n        const state = this.state\r\n        state[e.target.name] = e.target.value;\r\n        this.setState(state);\r\n      }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        const { email, password } = this.state;\r\n    \r\n        this.firebaseauth\r\n        .signInWithEmailAndPassword(email, password)\r\n        .then((user) => {\r\n          this.props.history.push('/');\r\n        })\r\n        .catch((error) => {\r\n          this.setState({ error: error });\r\n        });\r\n      }\r\n\r\n    componentDidMount() {\r\n        \r\n    }\r\n\r\n    render() {\r\n        const {\r\n            email,\r\n            password,\r\n            error,\r\n          } = this.state;\r\n\r\n        const isInvalid =\r\n            password === '' ||\r\n            email === '';\r\n\r\n      return (            \r\n        <div className=\"container\">\r\n            <div className=\"panel panel-default\">\r\n            <div className=\"panel-heading\">\r\n                <h3 className=\"panel-title\">\r\n                    LogIn\r\n                </h3>\r\n            </div>\r\n            <div className=\"panel-body\">\r\n                \r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label for=\"description\">Email:</label>\r\n                        <input\r\n                            name=\"email\"\r\n                            value={email}\r\n                            onChange={this.onChange}\r\n                            type=\"text\"\r\n                            placeholder=\"Email Address\"\r\n                            className=\"form-control col-md-4\"\r\n                            />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label for=\"author\">Password:</label>\r\n                        <input\r\n                            name=\"password\"\r\n                            value={password}\r\n                            onChange={this.onChange}\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            className=\"form-control col-md-4\"\r\n                            />\r\n                    </div>\r\n                    <button type=\"submit\" disabled={isInvalid} className=\"btn btn-success\">LogIn</button>\r\n\r\n                    {error && <p>{error.message}</p>}\r\n                </form>\r\n            </div>\r\n            <div className=\"panel-footer\">\r\n                <h4>Don't have an account?&nbsp;<Link to=\"/register\">Register</Link></h4>\r\n                <h4>Forgot Password?&nbsp;<Link to=\"/forgotpassword\">Forgot Password</Link></h4>\r\n            </div>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Login);","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Global from '../Global';\r\n\r\nclass Logout extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.firebaseauth = Global.authentication;\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    onLogout = (e) => {\r\n        this.firebaseauth.signOut();\r\n      }\r\n\r\n    componentDidMount() {\r\n        \r\n    }\r\n\r\n    render() {\r\n      \r\n      return (  \r\n            <NavLink className=\"nav-link\" to=\"#\" onClick={this.onLogout}>LogOut</NavLink>          \r\n        );\r\n    }\r\n}\r\n\r\nexport default Logout;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Global from '../Global';\r\n\r\nclass ForgotPassword extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.firebaseauth = Global.authentication;\r\n        this.state = {\r\n            email: '',\r\n            error: null,\r\n        };\r\n      }\r\n\r\n    onChange = (e) => {\r\n        const state = this.state\r\n        state[e.target.name] = e.target.value;\r\n        this.setState(state);\r\n      }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        const { email } = this.state;\r\n    \r\n        this.firebaseauth\r\n        .sendPasswordResetEmail(email)\r\n        .then((user) => {\r\n          this.props.history.push('/');\r\n        })\r\n        .catch((error) => {\r\n          this.setState({ error: error });\r\n        });\r\n      }\r\n\r\n    componentDidMount() {\r\n        \r\n    }\r\n\r\n    render() {\r\n        const {\r\n            email,\r\n            error,\r\n          } = this.state;\r\n\r\n        const isInvalid =\r\n            email === '';\r\n\r\n      return (            \r\n        <div className=\"container\">\r\n            <div className=\"panel panel-default\">\r\n            <div className=\"panel-heading\">\r\n                <h3 className=\"panel-title\">\r\n                    Forgot Password\r\n                </h3>\r\n            </div>\r\n            <div className=\"panel-body\">\r\n                \r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label for=\"description\">Email:</label>\r\n                        <input\r\n                            name=\"email\"\r\n                            value={email}\r\n                            onChange={this.onChange}\r\n                            type=\"text\"\r\n                            placeholder=\"Email Address\"\r\n                            className=\"form-control col-md-4\"\r\n                            />\r\n                    </div>\r\n                    <button type=\"submit\" disabled={isInvalid} className=\"btn btn-success\">Submit</button>\r\n\r\n                    {error && <p>{error.message}</p>}\r\n                </form>\r\n            </div>\r\n            <div className=\"panel-footer\">\r\n                <h4>Don't have an account?&nbsp;<Link to=\"/register\">Register</Link></h4>\r\n                <h4>Already Member?&nbsp;<Link to=\"/login\">Login</Link></h4>\r\n            </div>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ForgotPassword;","import React, { Component } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport Global from '../Global';\r\n\r\nclass ChangePassword extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.firebaseauth = Global.authentication;\r\n        this.state = {\r\n            password: '',\r\n            confirmpassword: '',\r\n            error: null,\r\n        };\r\n      }\r\n\r\n    onChange = (e) => {\r\n        const state = this.state\r\n        state[e.target.name] = e.target.value;\r\n        this.setState(state);\r\n      }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        const { password } = this.state;\r\n    \r\n        this.firebaseauth\r\n        .currentUser.updatePassword(password)\r\n        .then((user) => {\r\n          this.props.history.push('/');\r\n        })\r\n        .catch((error) => {\r\n          this.setState({ error: error });\r\n        });\r\n      }\r\n\r\n    componentDidMount() {\r\n        \r\n    }\r\n\r\n    render() {\r\n        const {\r\n            confirmpassword,\r\n            password,\r\n            error,\r\n          } = this.state;\r\n\r\n        const isInvalid =\r\n            password !== confirmpassword || \r\n            password === '';;\r\n\r\n      return (            \r\n        <div className=\"container\">\r\n            <div className=\"panel panel-default\">\r\n            <div className=\"panel-heading\">\r\n                <h3 className=\"panel-title\">\r\n                    Change Password\r\n                </h3>\r\n            </div>\r\n            <div className=\"panel-body\">\r\n                \r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label for=\"description\">New Password:</label>\r\n                        <input\r\n                            name=\"password\"\r\n                            value={password}\r\n                            onChange={this.onChange}\r\n                            type=\"password\"\r\n                            placeholder=\"New Password\"\r\n                            className=\"form-control col-md-4\"\r\n                            />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label for=\"author\">Confirm Password:</label>\r\n                        <input\r\n                            name=\"confirmpassword\"\r\n                            value={confirmpassword}\r\n                            onChange={this.onChange}\r\n                            type=\"password\"\r\n                            placeholder=\"Confirm New Password\"\r\n                            className=\"form-control col-md-4\"\r\n                            />\r\n                    </div>\r\n                    <button type=\"submit\" disabled={isInvalid} className=\"btn btn-success\">Submit</button>\r\n\r\n                    {error && <p>{error.message}</p>}\r\n                </form>\r\n            </div>\r\n            <div className=\"panel-footer\">\r\n                <h4>&nbsp;</h4>\r\n            </div>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(ChangePassword);","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({component: Component, authenticated, ...rest}) => {\r\n    return (\r\n        <Route\r\n          {...rest}\r\n          render={(props) => authenticated === true\r\n            ? <Component {...props} />\r\n            : <Redirect to={{pathname: '/login', state: {from: props.location}}} />}\r\n        />\r\n      )\r\n};\r\n\r\nexport default ProtectedRoute;","import React, { Component } from 'react';\r\nimport { Route, Switch, NavLink } from 'react-router-dom';\r\n\r\nimport Edit from './components/boards/Edit';\r\nimport Create from './components/boards/Create';\r\nimport List from './components/boards/List';\r\nimport Info from './components/boards/Info';\r\nimport Dashboard from './components/Dashboard';\r\nimport Register from './components/auth/Register';\r\nimport Login from './components/auth/Login';\r\nimport Logout from './components/auth/Logout';\r\nimport ForgotPassword from './components/auth/ForgotPassword';\r\nimport ChangePassword from './components/auth/ChangePassword';\r\nimport ProtectedRoute from './ProtectedRoute';\r\n\r\nconst NavigationAuth = () => (\r\n    <ul className=\"nav navbar-nav\">\r\n      <li className=\"nav-item\"><NavLink className=\"nav-link\" to=\"/changepassword\">Change Password</NavLink></li>\r\n      <li className=\"nav-item\"><Logout /></li>\r\n    </ul>\r\n  );\r\n  \r\n  const NavigationNonAuth = () => (\r\n    <ul className=\"nav navbar-nav\">\r\n      <li className=\"nav-item\"><NavLink className=\"nav-link\" to=\"/login\">Login</NavLink></li>\r\n      <li className=\"nav-item\"><NavLink className=\"nav-link\" to=\"/register\">Register</NavLink></li>\r\n    </ul>\r\n  );\r\n\r\nclass Router extends Component {\r\n    render() {\r\n      return (            \r\n            <div>\r\n                <nav class=\"navbar navbar-expand-sm bg-light\">\r\n                    <div class=\"navbar-header\">\r\n                        <NavLink className=\"navbar-brand\" to=\"/\">React Firestore Boards</NavLink>\r\n                    </div>\r\n                    <ul className=\"nav navbar-nav\">\r\n                        <li className=\"nav-item\"><NavLink className=\"nav-link\" to=\"/\">Home</NavLink></li>\r\n                        <li className=\"nav-item\"><NavLink className=\"nav-link\" to=\"/boards\">Boards</NavLink></li>\r\n                    </ul>\r\n                    {this.props.authenticated ? <NavigationAuth /> : <NavigationNonAuth />}\r\n                </nav>\r\n                <Switch>\r\n                    <Route exact path='/' component={Dashboard} />\r\n                    <Route path='/register' component={Register} />\r\n                    <Route path='/login' authenticated={this.props.authenticated} component={Login} />\r\n                    <Route path='/forgotpassword' component={ForgotPassword} />\r\n                    <ProtectedRoute authenticated={this.props.authenticated} path=\"/changepassword\" component={ChangePassword} />\r\n                    <ProtectedRoute authenticated={this.props.authenticated} path=\"/boards\" component={List} />\r\n                    <ProtectedRoute authenticated={this.props.authenticated} path=\"/edit/:id\" component={Edit} />\r\n                    <ProtectedRoute authenticated={this.props.authenticated} path=\"/create\" component={Create} />\r\n                    <ProtectedRoute authenticated={this.props.authenticated} path=\"/info/:id\" component={Info} />\r\n                </Switch>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Router;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Router from './Router';\nimport Global from './components/Global';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.firebaseauth = Global.authentication;\n    this.state = {\n      authenticated: false\n    };\n  }\n\n  componentDidMount() {\n    this.firebaseauth.onAuthStateChanged((authenticated) => {\n      authenticated\n        ? this.setState(() => ({\n            authenticated: true,\n          }))\n        : this.setState(() => ({\n            authenticated: false,\n          }));\n    });\n  }\n\n  render() {\n    return (\n      <Router authenticated={this.state.authenticated} />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter basename=\"/boards-app\" >\n        <App />\n    </BrowserRouter>, \n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}